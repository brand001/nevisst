import com.android.Version

buildscript {
	// Buildscript is evaluated before everything else so we can't use getExtOrDefault
	def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["NevisMobileAuthenticationSdkReact_kotlinVersion"]

	repositories {
		google()
		mavenCentral()
	}

	dependencies {
		classpath "com.android.tools.build:gradle:7.4.2"
		// noinspection DifferentKotlinGradleVersion
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
	}
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: 'kotlinx-serialization'

def isNewArchitectureEnabled() {
	return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

if (isNewArchitectureEnabled()) {
	apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
	return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["NevisMobileAuthenticationSdkReact_" + name]
}

def getExtOrIntegerDefault(name) {
	return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["NevisMobileAuthenticationSdkReact_" + name]).toInteger()
}

static def supportsNamespace() {
	def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
	def major = parsed[0].toInteger()
	def minor = parsed[1].toInteger()

	// Namespace support was added in 7.3.0
	if (major == 7 && minor >= 3) {
		return true
	}

	return major >= 8
}

android {
	if (supportsNamespace()) {
		namespace "ch.nevis.mobile.authentication.sdk.react"

		sourceSets {
			main {
				manifest.srcFile "src/main/AndroidManifestNew.xml"
			}
		}
	}

	compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

	defaultConfig {
		minSdkVersion getExtOrIntegerDefault("minSdkVersion")
		targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
		buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
	}
	buildTypes {
		release {
			minifyEnabled false
		}
	}

	lintOptions {
		disable "GradleCompatible"
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	sourceSets {
		main {
			if (isNewArchitectureEnabled()) {
				java.srcDirs += [
					"src/newarch",
					// This is needed to build Kotlin project with NewArch enabled
					"${project.buildDir}/generated/source/codegen/java"
				]
			} else {
				java.srcDirs += ["src/oldarch"]
			}
		}
	}
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
	//noinspection GradleDynamicVersion
	debugCompileOnly 'ch.nevis:nevis-mobile-authentication-sdk-android-debug:3.5.+'
	//noinspection GradleDynamicVersion
	releaseCompileOnly 'ch.nevis:nevis-mobile-authentication-sdk-android:3.5.+'

	// For < 0.71, this will be from the local maven repo
	// For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
	//noinspection GradleDynamicVersion
	implementation "com.facebook.react:react-native:+"
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

	implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
}

if (isNewArchitectureEnabled()) {
	react {
		jsRootDir = file("../src/")
		libraryName = "NevisMobileAuthenticationSdkReact"
		codegenJavaPackageName = "ch.nevis.mobile.authentication.sdk.react"
	}
}

print "New architecture for the React Native Module is: ${isNewArchitectureEnabled() ? 'enabled' : 'disabled'}\n"
